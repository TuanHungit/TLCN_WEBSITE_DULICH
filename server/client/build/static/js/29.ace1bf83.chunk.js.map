{"version":3,"sources":["components/blogs/editor/quilllEditor.js","containers/blogEditor/blogEditer.js"],"names":["__ISMSIE__","navigator","userAgent","match","BlockEmbed","Quill","import","ImageBlot","value","imgTag","setAttribute","src","alt","node","getAttribute","blotName","tagName","register","VideoBlot","videoTag","title","iframeTag","document","createElement","FileBlot","prefixTag","innerText","bTag","linkTag","appendChild","querySelector","className","PollBlot","id","QuillEditor","props","handleChange","html","console","log","setState","editorHtml","onEditorChange","state","imageHandler","inputOpenImageRef","current","click","videoHandler","inputOpenVideoRef","insertImage","e","stopPropagation","preventDefault","currentTarget","files","length","file","formData","FormData","append","axios","post","header","then","response","data","success","alert","quill","reactQuillRef","getEditor","focus","range","getSelection","position","index","insertEmbed","url","fileName","setSelection","_isMounted","onFilesChange","insertVideo","modules","toolbar","container","handlers","formats","React","createRef","inputOpenFileRef","this","defaultValue","onChange","persist","ref","el","theme","placeholder","type","accept","style","display","Component","useState","setTitle","content","setContent","setFiles","onSubmit","event","variables","alertify","setTimeout","history","push","catch","err","class","backgroundColor","maxWidth","margin","textAlign","target"],"mappings":"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","file":"static/js/29.ace1bf83.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport axios from '../../../common/axios-order';\r\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\r\n\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\n\r\nclass ImageBlot extends BlockEmbed {\r\n  static create(value) {\r\n    const imgTag = super.create();\r\n    imgTag.setAttribute('src', value.src);\r\n    imgTag.setAttribute('alt', value.alt);\r\n    imgTag.setAttribute('width', '100%');\r\n    return imgTag;\r\n  }\r\n\r\n  static value(node) {\r\n    return { src: node.getAttribute('src'), alt: node.getAttribute('alt') };\r\n  }\r\n}\r\n\r\nImageBlot.blotName = 'image';\r\nImageBlot.tagName = 'img';\r\nQuill.register(ImageBlot);\r\n\r\nclass VideoBlot extends BlockEmbed {\r\n  static create(value) {\r\n    if (value && value.src) {\r\n      const videoTag = super.create();\r\n      videoTag.setAttribute('src', value.src);\r\n      videoTag.setAttribute('title', value.title);\r\n      videoTag.setAttribute('width', '100%');\r\n      videoTag.setAttribute('controls', '');\r\n\r\n      return videoTag;\r\n    } else {\r\n      const iframeTag = document.createElement('iframe');\r\n      iframeTag.setAttribute('src', value);\r\n      iframeTag.setAttribute('frameborder', '0');\r\n      iframeTag.setAttribute('allowfullscreen', true);\r\n      iframeTag.setAttribute('width', '100%');\r\n      return iframeTag;\r\n    }\r\n  }\r\n\r\n  static value(node) {\r\n    if (node.getAttribute('title')) {\r\n      return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\r\n    } else {\r\n      return node.getAttribute('src');\r\n    }\r\n    // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\r\n  }\r\n}\r\n\r\nVideoBlot.blotName = 'video';\r\nVideoBlot.tagName = 'video';\r\nQuill.register(VideoBlot);\r\n\r\nclass FileBlot extends BlockEmbed {\r\n  static create(value) {\r\n    const prefixTag = document.createElement('span');\r\n    prefixTag.innerText = '첨부파일 - ';\r\n\r\n    const bTag = document.createElement('b');\r\n    //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\r\n    bTag.innerText = value;\r\n\r\n    const linkTag = document.createElement('a');\r\n    linkTag.setAttribute('href', value);\r\n    linkTag.setAttribute('target', '_blank');\r\n    linkTag.setAttribute('className', 'file-link-inner-post');\r\n    linkTag.appendChild(bTag);\r\n    //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\r\n\r\n    const node = super.create();\r\n    node.appendChild(prefixTag);\r\n    node.appendChild(linkTag);\r\n\r\n    return node;\r\n  }\r\n\r\n  static value(node) {\r\n    const linkTag = node.querySelector('a');\r\n    return linkTag.getAttribute('href');\r\n  }\r\n}\r\n\r\nFileBlot.blotName = 'file';\r\nFileBlot.tagName = 'p';\r\nFileBlot.className = 'file-inner-post';\r\nQuill.register(FileBlot);\r\n\r\nclass PollBlot extends BlockEmbed {\r\n  static create(value) {\r\n    const prefixTag = document.createElement('span');\r\n    prefixTag.innerText = '투표 - ';\r\n\r\n    const bTag = document.createElement('b');\r\n    bTag.innerText = value.title;\r\n\r\n    const node = super.create();\r\n    node.setAttribute('id', value.id);\r\n    node.appendChild(prefixTag);\r\n    node.appendChild(bTag);\r\n\r\n    return node;\r\n  }\r\n\r\n  static value(node) {\r\n    const id = node.getAttribute('id');\r\n    const bTag = node.querySelector('b');\r\n    const title = bTag.innerText;\r\n    return { id, title };\r\n  }\r\n}\r\n\r\nPollBlot.blotName = 'poll';\r\nPollBlot.tagName = 'p';\r\nPollBlot.className = 'poll-inner-post';\r\nQuill.register(PollBlot);\r\n\r\nclass QuillEditor extends React.Component {\r\n  bandId;\r\n  placeholder;\r\n  onEditorChange;\r\n  onFilesChange;\r\n  onPollsChange;\r\n  _isMounted;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editorHtml: __ISMSIE__ ? '<p>&nbsp;</p>' : '',\r\n      files: [],\r\n    };\r\n\r\n    this.reactQuillRef = null;\r\n\r\n    this.inputOpenImageRef = React.createRef();\r\n    this.inputOpenVideoRef = React.createRef();\r\n    this.inputOpenFileRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  handleChange = (html) => {\r\n    console.log('html', html);\r\n    // https://youtu.be/BbR-QCoKngE\r\n    // https://www.youtube.com/embed/ZwKhufmMxko\r\n    // https://tv.naver.com/v/9176888\r\n    // renderToStaticMarkup(ReactHtmlParser(html, options));\r\n\r\n    this.setState(\r\n      {\r\n        editorHtml: html,\r\n      },\r\n      () => {\r\n        this.props.onEditorChange(this.state.editorHtml);\r\n      }\r\n    );\r\n  };\r\n\r\n  // I V F P들을  눌렀을떄 insertImage: this.imageHandler로 가서  거기서 inputOpenImageRef를 클릭 시킨다.\r\n  imageHandler = () => {\r\n    this.inputOpenImageRef.current.click();\r\n  };\r\n\r\n  videoHandler = () => {\r\n    this.inputOpenVideoRef.current.click();\r\n  };\r\n\r\n  insertImage = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (\r\n      e.currentTarget &&\r\n      e.currentTarget.files &&\r\n      e.currentTarget.files.length > 0\r\n    ) {\r\n      const file = e.currentTarget.files[0];\r\n\r\n      let formData = new FormData();\r\n      const config = {\r\n        header: { 'content-type': 'multipart/form-data' },\r\n      };\r\n      formData.append('file', file);\r\n\r\n      axios.post('/blogs/uploadfiles', formData, config).then((response) => {\r\n        if (response.data.success) {\r\n          const quill = this.reactQuillRef.getEditor();\r\n          quill.focus();\r\n\r\n          let range = quill.getSelection();\r\n          let position = range ? range.index : 0;\r\n\r\n          //먼저 노드 서버에다가 이미지를 넣은 다음에   여기 아래에 src에다가 그걸 넣으면 그게\r\n          //이미지 블롯으로 가서  크리에이트가 이미지를 형성 하며 그걸 발류에서     src 랑 alt 를 가져간후에  editorHTML에 다가 넣는다.\r\n          quill.insertEmbed(position, 'image', {\r\n            src: 'http://localhost:3001/' + response.data.url,\r\n            alt: response.data.fileName,\r\n          });\r\n          quill.setSelection(position + 1);\r\n\r\n          if (this._isMounted) {\r\n            this.setState(\r\n              {\r\n                files: [...this.state.files, file],\r\n              },\r\n              () => {\r\n                this.props.onFilesChange(this.state.files);\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          return alert('failed to upload file');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  insertVideo = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    if (\r\n      e.currentTarget &&\r\n      e.currentTarget.files &&\r\n      e.currentTarget.files.length > 0\r\n    ) {\r\n      const file = e.currentTarget.files[0];\r\n\r\n      let formData = new FormData();\r\n      const config = {\r\n        header: { 'content-type': 'multipart/form-data' },\r\n      };\r\n      formData.append('file', file);\r\n\r\n      axios.post('/blogs/uploadfiles', formData, config).then((response) => {\r\n        if (response.data.success) {\r\n          const quill = this.reactQuillRef.getEditor();\r\n          quill.focus();\r\n\r\n          let range = quill.getSelection();\r\n          let position = range ? range.index : 0;\r\n          quill.insertEmbed(position, 'video', {\r\n            src: 'http://localhost:3001/' + response.data.url,\r\n            title: response.data.fileName,\r\n          });\r\n          quill.setSelection(position + 1);\r\n\r\n          if (this._isMounted) {\r\n            this.setState(\r\n              {\r\n                files: [...this.state.files, file],\r\n              },\r\n              () => {\r\n                this.props.onFilesChange(this.state.files);\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          return alert('failed to upload file');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id='toolbar'>\r\n          <select\r\n            className='ql-header'\r\n            defaultValue={''}\r\n            onChange={(e) => e.persist()}\r\n          >\r\n            <option value='1' />\r\n            <option value='2' />\r\n            <option value='' />\r\n          </select>\r\n          <button className='ql-bold' />\r\n          <button className='ql-italic' />\r\n          <button className='ql-underline' />\r\n          <button className='ql-strike' />\r\n          <button className='ql-insertImage'>I</button>\r\n          <button className='ql-insertVideo'>V</button>\r\n          <button className='ql-insertFile'>F</button>\r\n          <button className='ql-link' />\r\n          <button className='ql-code-block' />\r\n          <button className='ql-video' />\r\n          <button className='ql-blockquote' />\r\n          <button className='ql-clean' />\r\n        </div>\r\n        <ReactQuill\r\n          ref={(el) => {\r\n            this.reactQuillRef = el;\r\n          }}\r\n          theme={'snow'}\r\n          onChange={this.handleChange}\r\n          modules={this.modules}\r\n          formats={this.formats}\r\n          value={this.state.editorHtml}\r\n          placeholder={this.props.placeholder}\r\n        />\r\n        <input\r\n          type='file'\r\n          accept='image/*'\r\n          ref={this.inputOpenImageRef}\r\n          style={{ display: 'none' }}\r\n          onChange={this.insertImage}\r\n        />\r\n        <input\r\n          type='file'\r\n          accept='video/*'\r\n          ref={this.inputOpenVideoRef}\r\n          style={{ display: 'none' }}\r\n          onChange={this.insertVideo}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  modules = {\r\n    //syntax: true,\r\n    toolbar: {\r\n      container: '#toolbar',\r\n      //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다.\r\n      handlers: {\r\n        insertImage: this.imageHandler,\r\n        insertVideo: this.videoHandler,\r\n      },\r\n    },\r\n  };\r\n\r\n  formats = [\r\n    'header',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'image',\r\n    'video',\r\n    'file',\r\n    'link',\r\n    'code-block',\r\n    'video',\r\n    'blockquote',\r\n    'clean',\r\n  ];\r\n}\r\n\r\nexport default QuillEditor;\r\n","import React, { useState } from 'react';\r\nimport QuillEditor from '../../components/blogs/editor/quilllEditor';\r\nimport axios from '../../common/axios-order';\r\nimport alertify from 'alertifyjs';\r\nexport default (props) => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const onEditorChange = (value) => {\r\n    setContent(value);\r\n    console.log(content);\r\n  };\r\n  const onFilesChange = (files) => {\r\n    setFiles(files);\r\n  };\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setContent('');\r\n\r\n    const variables = {\r\n      content: content,\r\n      title: title,\r\n    };\r\n    console.log(variables);\r\n    axios\r\n      .post('/blogs', variables)\r\n      .then((response) => {\r\n        if (response) {\r\n          alertify.success('Post Created!');\r\n\r\n          setTimeout(() => {\r\n            props.history.push('/blog');\r\n          }, 2000);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='body-inner'>\r\n      <div class='main-wrapper scrollspy-container'>\r\n        <section\r\n          class='page-wrapper page-detail pt-100'\r\n          style={{ backgroundColor: '#f3f3f3' }}\r\n        >\r\n          <div style={{ maxWidth: '1000px', margin: '1rem auto' }}>\r\n            <div style={{ textAlign: 'center' }}>Tạo Blog</div>\r\n            <label>Tiêu đề:</label>\r\n            <input\r\n              placeholder='Nhập tiêu đề blog'\r\n              onChange={(event) => setTitle(event.target.value)}\r\n            />\r\n            <QuillEditor\r\n              placeholder={'Start Posting Something'}\r\n              onEditorChange={onEditorChange}\r\n              onFilesChange={onFilesChange}\r\n            />\r\n\r\n            <form onSubmit={onSubmit}>\r\n              <div style={{ textAlign: 'center', margin: '2rem' }}>\r\n                <button type='submit' className='btn' onSubmit={onSubmit}>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}